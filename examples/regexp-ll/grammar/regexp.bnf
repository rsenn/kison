Regexp ::= '^' ? Expression 
Expression ::= SubExpression  ( '|'  SubExpression  ) *
SubExpression ::= ExpressionItem *
ExpressionItem ::= Match 
ExpressionItem ::= Group 
ExpressionItem ::= Anchor 
ExpressionItem ::= 'backreference' 
Group ::= '('  '?:' ? Expression  ')'  Quantifier ?
Group ::= 'namedGroupPrefix'  Expression  ')'  Quantifier ?
Match ::= MatchItem  Quantifier ?
MatchItem ::= 'anyChar' 
MatchItem ::= MatchCharacterClass 
MatchItem ::= 'char' 
MatchCharacterClass ::= CharacterGroup 
MatchCharacterClass ::= CharacterClass 
CharacterGroup ::= '['  '^' ? CharacterGroupInner  ']' 
CharacterGroupInner ::= CharacterGroupItem *
CharacterGroupItem ::= CharacterClass 
CharacterGroupItem ::= CharacterRange 
CharacterClass ::= 'characterClassAnyWordInverted' 
CharacterClass ::= 'characterClassAnyWord' 
CharacterClass ::= 'characterClassAnyDecimalDigit' 
CharacterClass ::= 'characterClassAnyDecimalDigitInverted' 
CharacterClass ::= 'whitespaceCharacter' 
CharacterClass ::= 'whitespaceCharacterInverted' 
CharacterRange ::= 'char' 
CharacterRange ::= 'char'  '-'  'char' 
Quantifier ::= QuantifierType  '?' ?
QuantifierType ::= '*' 
QuantifierType ::= '+' 
QuantifierType ::= '?' 
QuantifierType ::= '{'  'int'  '}' 
QuantifierType ::= '{'  'int'  ','  'int' ? '}' 
Anchor ::= 'anchorWordBoundary' 
Anchor ::= 'anchorNonWordBoundary' 
Anchor ::= 'anchorStartOfStringOnly' 
Anchor ::= 'anchorEndOfStringOnlyNotNewline' 
Anchor ::= 'anchorEndOfStringOnly' 
Anchor ::= 'anchorPreviousMatchEnd' 
Anchor ::= '$' 
Anchor ::= 'lookahead'  Expression  ')' 
Anchor ::= 'negativeLookahead'  Expression  ')' 
Anchor ::= 'lookbehind'  Expression  ')' 
Anchor ::= 'negativeLookbehind'  Expression  ')' 